plugins {
    // Плагин необходим для идентификации данного приложения
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // Подключение плагина для работы с аннотациями (нужно для Room)
    id 'kotlin-kapt'
    // Подключение плагина для удобной парселизации
    id 'kotlin-parcelize'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.pet.animal.formula.dose.health.veterinary.cure.vetformula"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Подключение binding
    buildFeatures {
        viewBinding true
    }

    bundle {
        language {
            enableSplit = false
        }
    }
}

//region Подключение модулей и библиотек
dependencies {
    // Подключение модулей
    api project(":screens")

    // Подключение библиотек
    //AndroidX
    implementation libs.androidX.appcompat
    //Kotlin
    implementation libs.kotlin.ktx
    implementation libs.kotlin.jdk7
    implementation libs.kotlin.coroutinescore
    implementation libs.kotlin.coroutinesandroid
    //Design
    implementation libs.design.material
    implementation libs.design.constrlayout
    // Tests
    // Core
    testImplementation libs.tests.junit
    androidTestImplementation libs.tests.ext
    // Нужно для работы AndroidJUnit4 в инструментальных-тестах
    androidTestImplementation libs.tests.espressocore
    implementation fileTree(dir: libs.tests.filetreedir, include: libs.tests.filetreeinclude)
    // Mockito
    testImplementation libs.tests.mockitocore
    testImplementation libs.tests.mockitoinline
    testImplementation(libs.tests.mockitokotlin) {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }
    // Robolectric
    testImplementation libs.tests.robolectric
    testImplementation libs.tests.robolectriccore
    testImplementation libs.tests.robolectricrunner
    testImplementation libs.tests.ext // Нужно для работы AndroidJUnit4 в Unit-тестах
    testImplementation libs.tests.robolectrictruth
    testImplementation libs.tests.robolectricespressocore
    testImplementation libs.tests.robolectricespressointents
    // UI Automator
    androidTestImplementation libs.tests.uiautomator
    androidTestImplementation libs.tests.uiautomatorrules
    // Fragment
    debugImplementation libs.tests.fragmentWork
    // RecyclerView
    debugImplementation libs.tests.recyclerView
    // Cicerony
    implementation libs.cicerony.runtime
    // Koin
    //Koin core features
    implementation libs.koin.core
    //Koin main features for Android (Scope,ViewModel ...)
    implementation libs.koin.android
    //Koin Java Compatibility
    implementation libs.koin.compat
    // For Retrofit 2 coroutines
    implementation libs.koin.retrofitcoroutines
    // Koin for Tests
    testImplementation libs.koin.testsandroidx
    testImplementation libs.koin.testsio
}
//endregion